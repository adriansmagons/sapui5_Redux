{"version":3,"file":"entitySlice.js","names":["entityReducer","state","action","type","payload","sEntityName","oData","athletes","oAthlete","filter","_id","sAthleteId","oAthletes","fetchAthletes","async","dispatch","getState","bLoading","response","fetch","data","json","error","console","__exports","__esModule"],"sources":["entitySlice.mjs"],"sourcesContent":["\r\nexport const entityReducer = function (state = {}, action) {\r\n            switch (action.type) {\r\n                case \"LOAD_DATA\":\r\n                    return{\r\n                        ...state,\r\n                        [action.payload.sEntityName]: action.payload.oData\r\n                    }\r\n                case \"INSERT_ATHLETE\":\r\n                    return{\r\n                        ...state,\r\n                        athletes: {\r\n                            athletes:[\r\n                                ...state.athletes.athletes,\r\n                                action.payload.oAthlete\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                case \"DELETE_ATHLETE\":\r\n                    return{\r\n                        ...state,\r\n                        athletes: {\r\n                            athletes: state.athletes.athletes.filter(oAthlete => oAthlete._id !== action.payload.sAthleteId)\r\n                        }\r\n                    }\r\n\r\n                case \"INSERT_MULTIPLE_ATHLETES\":\r\n                     return{\r\n                        ...state,\r\n                        athletes: {\r\n                            athletes: action.payload.oAthletes\r\n                            \r\n                        }\r\n                    }\r\n                default: \r\n                    return state\r\n            }\r\n        }\r\n\r\nexport const fetchAthletes = async function (dispatch, getState) {        // Async thunk middleware\r\n    dispatch({type: 'LOADING', payload: {bLoading: true}})\r\n  try {\r\n    const response = await fetch('http://localhost:3000/api/athletes');\r\n    const data = await response.json();\r\n\r\n    dispatch({ type: 'INSERT_MULTIPLE_ATHLETES', payload: {oAthletes: data} })\r\n    dispatch({type: 'LOADING', payload: {bLoading: false}})\r\n  } catch (error) {\r\n    console.error('Fetching data failed:', error);\r\n  }\r\n}"],"mappings":"yCACO,MAAMA,EAAgB,SAAUC,EAAQ,CAAC,EAAGC,GACvC,OAAQA,EAAOC,MACX,IAAK,YACD,MAAM,IACCF,EACH,CAACC,EAAOE,QAAQC,aAAcH,EAAOE,QAAQE,OAErD,IAAK,iBACD,MAAM,IACCL,EACHM,SAAU,CACNA,SAAS,IACFN,EAAMM,SAASA,SAClBL,EAAOE,QAAQI,YAK/B,IAAK,iBACD,MAAM,IACCP,EACHM,SAAU,CACNA,SAAUN,EAAMM,SAASA,SAASE,OAAOD,GAAYA,EAASE,MAAQR,EAAOE,QAAQO,cAIjG,IAAK,2BACA,MAAM,IACAV,EACHM,SAAU,CACNA,SAAUL,EAAOE,QAAQQ,YAIrC,QACI,OAAOX,EAEnB,EAED,MAAMY,EAAgBC,eAAgBC,EAAUC,GACnDD,EAAS,CAACZ,KAAM,UAAWC,QAAS,CAACa,SAAU,QACjD,IACE,MAAMC,QAAiBC,MAAM,sCAC7B,MAAMC,QAAaF,EAASG,OAE5BN,EAAS,CAAEZ,KAAM,2BAA4BC,QAAS,CAACQ,UAAWQ,KAClEL,EAAS,CAACZ,KAAM,UAAWC,QAAS,CAACa,SAAU,QACjD,CAAE,MAAOK,GACPC,QAAQD,MAAM,wBAAyBA,EACzC,CACF,EAAC,IAAAE,EAAA,CAAAC,WAAA,MAAAD,EAAAxB,gBAAAwB,EAAAX,gBAAA,OAAAW,CAAA","ignoreList":[]}